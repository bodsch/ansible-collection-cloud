---

#- name: check installed
#  ansible.builtin.include_tasks: check_installed.yml

- name: d
  debug:
    msg: "{{ collabora_arch }}"

- name: based on arch linux
  when:
    - ansible_os_family | lower == 'archlinux'
    - collabora_arch.install_type in ["source", "archive", "repository"]
  ansible.builtin.include_tasks: "install/archlinux/{{ collabora_arch.install_type }}.yml"

- name: not based on arch linux
  when:
    - ansible_os_family | lower != 'archlinux'
  block:
    - name: create policy-rc.d
      ansible.builtin.copy:
        dest: /usr/sbin/policy-rc.d
        content: |
          #!/bin/sh
          exit 101
        mode: "0755"

    - name: install collabora packages
      ansible.builtin.package:
        name: "{{ collabora_packages }}"
        state: present
      register: _collabora_installed

    - name: remove policy-rc.d
      ansible.builtin.file:
        path: /usr/sbin/policy-rc.d
        state: absent

- name: define collabora version
  bodsch.cloud.collabora_version:
  register: _version

- name: create custom fact file
  bodsch.core.facts:
    name: collabora_office
    facts:
      version: "{{ _version.version }}"

- name: define collabora user
  ansible.builtin.set_fact:
    collabora_owner: "{{ collabora_user_default }}"
  when:
    - not collabora_owner is defined or collabora_owner | length == 0

- name: re-define primary group
  when:
    - not collabora_group is defined or collabora_group | length == 0
  block:
    - name: "find primary group for user '{{ collabora_owner }}'"
      ansible.builtin.getent:
        database: group
        key: "{{ collabora_owner }}"
        split: ':'

    - name: "set collabora_group '{{ getent_group | list | first }}'"
      ansible.builtin.set_fact:
        collabora_group: "{{ getent_group | list | first }}"
      when:
        - getent_group is defined

- name: assert collabora group
  ansible.builtin.assert:
    that:
      - collabora_group is defined or collabora_group | length == 0
    msg: no collabora group detected
    quiet: true

- name: merge collabora service configuration between defaults and custom
  ansible.builtin.set_fact:
    collabora_service: "{{ collabora_defaults_service | combine(collabora_service, recursive=True) }}"

- name: systemd
  when:
    - ansible_service_mgr | lower == "systemd"
  block:
    - name: create collabora run configuration
      ansible.builtin.template:
        src: "default/coolwsd.j2"
        dest: "{{ collabora_defaults_directory }}/coolwsd"
        force: true
        owner: root
        mode: 0640
      notify:
        - restart service

    - name: create systemd service unit
      ansible.builtin.template:
        src: "init/systemd/coolwsd.service.j2"
        dest: "{{ systemd_lib_directory }}/coolwsd.service"
        owner: root
        group: root
        mode: 0644
      notify:
        - daemon-reload
        - restart service

- name: openrc
  when:
    - ansible_service_mgr | lower == "openrc"
  block:
    - name: create openrc service configuration
      ansible.builtin.template:
        src: "init/openrc/conf.d/coolwsd.j2"
        dest: "/etc/conf.d/coolwsd"
        owner: root
        group: root
        mode: 0644

    - name: create openrc init configuration
      ansible.builtin.template:
        src: "init/openrc/init.d/coolwsd.j2"
        dest: "/etc/init.d/coolwsd"
        owner: root
        group: root
        mode: "0750"

- name: TLS support
  when:
    - collabora_config | bodsch.core.support_tls
  block:
    - name: copy certificates
      become: true
      bodsch.cloud.collabora_tls_certificates:
        source:
          ssl_cert: "{{ collabora_tls_certificate.source_files.cert | default(omit) }}"
          ssl_key: "{{ collabora_tls_certificate.source_files.key | default(omit) }}"
          ssl_ca: "{{ collabora_tls_certificate.source_files.ca | default(omit) }}"
        destination: "{{ collabora_config | bodsch.cloud.tls_directory }}"
        owner: cool
        group: cool
      notify:
        - restart service

...
